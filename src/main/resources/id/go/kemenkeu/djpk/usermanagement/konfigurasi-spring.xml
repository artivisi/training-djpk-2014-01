<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- kalau dilakukan di Java -->
    <!--
    BasicDataSource dataSource = new BasicDataSource();
    dataSource.setDriverClassName("com.mysql.jdbc.Driver");
    dataSource.setUrl("jdbc:mysql://localhost/dbusermanagement");
    dataSource.setUsername"root");
    // dan seterusnya
    -->
    
    <!-- koneksi database menggunakan library Commons DBCP (database connection pooling) -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <!-- database driver untuk MySQL -->
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        
        <!-- url database -->
        <property name="url" value="jdbc:mysql://localhost/dbusermanagement" />
        <property name="username" value="root" />
        <property name="password" value="password" />
        <property name="maxActive" value="80" />
        <property name="maxWait" value="40000" />
        <property name="maxIdle" value="20" />
        <property name="minIdle" value="8" />
        <property name="initialSize" value="8" />
    </bean>
    
    <!-- kalau dilakukan di Java -->
    <!--
    SessionFactory sessionFactory = new LocalSessionFactoryBean();
    sessionFactory.setDataSource(dataSource);
    // dan seterusnya
    -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan">
            <list>
                <value>id.go.kemenkeu.djpk.usermanagement.domain</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
                hibernate.hbm2ddl.auto=update
                hibernate.show_sql=true
                hibernate.format_sql=true
            </value>
        </property>
    </bean>
    
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- supaya @Transactional diproses -->
    <tx:annotation-driven/>

    <!-- deklarasi manual, nanti ini akan diganti dengan autodetect -->
    <!--
    <bean id="userManagementService"
          class="id.go.kemenkeu.djpk.usermanagement.service.impl.UserManagementServiceImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    -->
    
    <!-- autodetect @Service, @Controller, @Repository, @Component -->
    <context:component-scan 
        base-package="id.go.kemenkeu.djpk.usermanagement.service.impl, id.go.kemenkeu.djpk.usermanagement.dao"/>
</beans>